"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreditCard = void 0;
const utils_1 = require("./utils");
class CreditCard {
    constructor(cieloTransactionParams) {
        this.cieloTransactionParams = cieloTransactionParams;
        this.util = new utils_1.Utils(cieloTransactionParams);
    }
    transaction(transaction) {
        return this.util.postToSales(transaction);
    }
    captureSaleTransaction(transaction) {
        const options = this.util.getHttpRequestOptions({
            method: utils_1.HttpRequestMethodEnum.PUT,
            path: `/1/sales/${transaction.paymentId}/capture`,
            hostname: this.cieloTransactionParams.hostnameTransacao,
        });
        if (transaction.amount && transaction.amount > 0) {
            options.path = `${options.path}?amount=${transaction.amount}`;
        }
        return this.util.request(options, {});
    }
    cancelTransaction(cancelTransactionRequest) {
        // Caso seja passado o valor do cancelamento, adiciona na url
        const amount = (cancelTransactionRequest.amount) ? `?amount=${cancelTransactionRequest.amount}` : '';
        const path = (cancelTransactionRequest.paymentId) ? `/1/sales/${cancelTransactionRequest.paymentId}/void${amount}` : `/1/sales/OrderId/${cancelTransactionRequest.merchantOrderId}/void${amount}`;
        const options = this.util.getHttpRequestOptions({
            method: utils_1.HttpRequestMethodEnum.PUT,
            path: path,
            hostname: this.cieloTransactionParams.hostnameTransacao,
        });
        return this.util.request(options, {});
    }
}
exports.CreditCard = CreditCard;
